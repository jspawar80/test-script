name: Destroy AKS Cluster

on:
  workflow_dispatch:
    inputs:
      resource_group_name:
        default: 'gh-aks-services'
        description: 'Azure Resource Group'
        required: false
      node_resource_group:
        default: 'gh-aks-infrastructure'
        description: 'Node Resource Group for AKS Infrastructure'
        required: false
      aks_cluster_name:
        default: 'gh-aks-cluster'
        description: 'AKS cluster name'
        required: false
      location:
        default: 'eastus'
        description: 'Azure region'
        required: false
jobs:
  Terraform:
    name: Destroy AKS cluster
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.4.6
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform -chdir=tf-files init

    - name: Terraform Validate
      run: terraform -chdir=tf-files validate

    - name: Terraform Plan
      if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
      run: TF_VAR_client_id=${{ secrets.AZURE_CLIENT_ID }} TF_VAR_subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }} TF_VAR_tenant_id=${{ secrets.AZURE_TENANT_ID }} TF_VAR_client_secret=${{ secrets.AZURE_CLIENT_SECRET }} TF_VAR_resource_group_name=${{ github.event.inputs.resource_group_name }} TF_VAR_aks_cluster_name=${{ github.event.inputs.aks_cluster_name }} TF_VAR_location=${{ github.event.inputs.location }} terraform -chdir=tf-files plan -out=tfplan -input=false -no-color

    - name: Terraform Destroy
      if: github.event_name == 'workflow_dispatch'
      run: |
        TF_VAR_client_id=${{ secrets.AZURE_CLIENT_ID }} TF_VAR_subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }} TF_VAR_tenant_id=${{ secrets.AZURE_TENANT_ID }} TF_VAR_client_secret=${{ secrets.AZURE_CLIENT_SECRET }} TF_VAR_resource_group_name=${{ github.event.inputs.resource_group_name }} TF_VAR_aks_cluster_name=${{ github.event.inputs.aks_cluster_name }} TF_VAR_location=${{ github.event.inputs.location }} terraform -chdir=tf-files destroy -auto-approve
