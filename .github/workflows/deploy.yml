name: Build and Push to ECR and Deploy to ECS

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: lynk-api
  TASK_DEFINITION: lynk-api-prod
  SERVICE_NAME: lynk-api-prod
  CLUSTER_NAME: lynk-api-prod

jobs:
  build-and-push:
    name: Build and push Docker image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: AKIA2ZBFUJ4NDFYXF5UD
        aws-secret-access-key: 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
        aws-region: us-east-1

    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition ${{ env.TASK_DEFINITION }} --query "taskDefinition" > task-definition.json

    - name: Fill in the new image ID in the task definition
      run: |
        chmod +x task-def.sh
        ./task-def.sh "${{ needs.build-and-push.outputs.image }}" "${{ env.TASK_DEFINITION_PATH }}"
      env:
        TASK_DEFINITION_PATH: task-definition.json

    - name: Register task definition
      run: |
        aws ecs register-task-definition --cli-input-json file://task-definition.json
        taskDef=$(aws ecs describe-task-definition --task-definition ${{ env.TASK_DEFINITION }} --query "taskDefinition.taskDefinitionArn")
        echo "TASK_DEFINITION=$taskDef" >> $GITHUB_ENV

    - name: Update ECS service
      run: |
        aws ecs update-service --cluster ${{ env.CLUSTER_NAME }} --service ${{ env.SERVICE_NAME }} --task-definition $TASK_DEFINITION --desired-count 0
        sleep 60 # wait for tasks to stop
        aws ecs update-service --cluster ${{ env.CLUSTER_NAME }} --service ${{ env.SERVICE_NAME }} --task-definition $TASK_DEFINITION
